name: Release Charts

on: 
  push:
    tags:
      - "*.*.*"

jobs:
  test-docker:
    name: Run tests in docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Build images
        working-directory: ./test/docker
        run: |
          docker compose -f docker-compose.yaml build

      - name: Run docker tests
        working-directory: ./test/docker
        run: |
          ../helpers/bats/bin/bats test.bats --print-output-on-failure

  test-kubernetes:
    name: Run tests in kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Install KinD Kubernetes
        uses: helm/kind-action@v1.7.0
        with:
          install_only: true

      - uses: zufardhiyaulhaq/setup-istioctl@v1.1.0
        with:
          version: 1.17.2

      - name: Run kubernetes tests
        working-directory: ./test/kubernetes
        run: |
          ../helpers/bats/bin/bats test.bats --print-output-on-failure

  docker:
    name: Release container image
    needs: [test-docker, test-kubernetes]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: jakoberpf/zerotier-gateway

      - name: Build image and push to Docker Hub tagged with latest
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
  release-chart:
    name: Release helm chart
    needs: [test-docker, test-kubernetes]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup docker
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        run: |
          REPO_OWNER=`echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Release chart to Github Pages
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: .
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: true
          
      # - name: Push Charts to Container Registry
      #   working-directory: charts
      #   run: |
      #     REPO_OWNER=`echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
      #     for CHART_DIR in $(ls -d */Chart.yaml | cut -d '/' -f 1); do
      #       CHART_NAME="$(yq '.name' ${CHART_DIR}/Chart.yaml)"
      #       echo "Packaging ${CHART_NAME} chart"
      #       helm dependency build ${CHART_DIR}
      #       helm package ${CHART_DIR}
      #       PKG_NAME=`ls *.tgz`
      #       echo "Pushing ${CHART_NAME} chart"
      #       helm push ${PKG_NAME} oci://ghcr.io/${REPO_OWNER}/charts
      #       rm ${PKG_NAME}
      #     done
